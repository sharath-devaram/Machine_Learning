{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMv9ZVdvTwsO/PlEES4/ndI"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"uXzdmDfRwlcQ"},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","data = pd.read_csv(\"Health_insurance.csv\")\n","data.head()"]},{"cell_type":"code","source":["data.isnull().sum()"],"metadata":{"id":"bLgvJGlzxEYf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x = np.array(data[[\"age\", \"sex\", \"bmi\", \"smoker\"]])\n","y = np.array(data[\"charges\"])\n","\n","from sklearn.model_selection import train_test_split\n","xtrain, xtest, ytrain, ytest = train_test_split(x, y, test_size=0.2, random_state=42)"],"metadata":{"id":"oV-DuIEpxEvL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestRegressor\n","forest = RandomForestRegressor()\n","forest.fit(xtrain, ytrain)"],"metadata":{"id":"iaZTzeEyxExM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["ypred = forest.predict(xtest)\n","data = pd.DataFrame(data={\"Predicted Premium Amount\": ypred})\n","print(data.head())"],"metadata":{"id":"NXc2YIlwxEzR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"NVfflCuUxE4D"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"5PqEZK0JxE6j"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"eBzGF5OjxE9A"},"execution_count":null,"outputs":[]}]}